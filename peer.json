{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "peer": {
           "type": "bool",
           "defaultValue": true,
           "metadata": {
                "description": "Boolean to control whether spoke is peered to the hub"
            }
        },
        "vNet1": {
            "type": "object",
            "defaultValue": {
                "resourceGroup": "centralus",
                "vnet": {
                    "name": "vNet1"
                }
            },
            "metadata": {
                "description": "Object containing required information for the hub vNet.  See defaultValue for minimum expected structure."
            }
        },
        "vNet2": {
            "type": "object",
            "defaultValue": {
                "resourceGroup": "centralus",
                "vnet": {
                    "name": "vNet2"
                }
            },
            "metadata": {
                "description": "Object containing required information for the hub vNet.  See defaultValue for minimum expected structure."
            }
        }
    },
    "variables": {
        "vNet1id": "[resourceId(parameters('vNet1').resourceGroup,'Microsoft.Network/virtualNetworks/', parameters('vNet1').vnet.name)]",
        "vNet2id": "[resourceId(parameters('vNet2').resourceGroup,'Microsoft.Network/virtualNetworks/', parameters('vNet2').vnet.name)]"
    },        
    "resources": [
      {
            "comments": "Optional vnet to hub peering",
            "condition": "[parameters('peer')]",
            "name": "[concat(parameters('vNet1').vnet.name, '/to-', parameters('vNet2').vnet.name)]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[variables('vNet2id')]"
                }
            },
            "dependsOn": [
                "[concat(parameters('vNet2').vnet.name)]"
            ]
       },
               {
            "comments": "Inline deployment for reverse peering",
            "condition": "[parameters('peer')]",
            "name": "[concat('DeployVnetPeering-', parameters('vNet2').vnet.name, '-to-', parameters('vNet1').vnet.name)]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('vNet2').resourceGroup]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2017-10-01",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "name": "[concat(parameters('vnet2').vnet.name, '/to-', parameters('vNet1').vnet.name)]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": false,
                                "allowGatewayTransit": true,
                                "useRemoteGateways": false,
                                "remoteVirtualNetwork": {
                                    "id": "[variables('vNet1id')]"
                                }
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(parameters('vNet1').vnet.name)]"
            ]
        }
    ]
}